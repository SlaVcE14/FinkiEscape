<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="soaceImg.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        XtKqzUs7nf8AKoCKSCkpKGMAAAAASUVORK5CYII=
</value>
  </data>
</root>